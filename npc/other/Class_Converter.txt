// Gaia Champions Arena Script

// Warps a Itemmall
// ========================================================================

// Configuración de Mapas
// ========================================================================
prt_are02	mapflag	nobranch
prt_are02	mapflag	nomemo
prt_are02	mapflag	nopenalty
prt_are02	mapflag	noteleport
prt_are02	mapflag	nowarpto

//============================================================ 
//= NPC de Control de Variables Numéricas
//============================================================ 

-	script	NPCVarsN	-1,{
	end;
	
OnWhisperGlobal:
	if (getgmlevel() < 6) end; // No acepta Players ni Cops
	set @Nombre$, @whispervar0$;
	if (getstrlen(@whispervar1$) > 0) set @Nombre$, @whispervar1$;
	if (getstrlen(@Nombre$) < 4 || getstrlen(@Nombre$) > 24) {
		dispbottom "[El nombre ingresado es incorrecto]";
		end;
	}
	set @RID, getcharid(3,@Nombre$);
	if (@RID < 1) {
		dispbottom "[El personaje no existe o no está conectado]";
		end;
	}
	// Encontrado el Personaje

L_Consulta:
	mes "^0000FF[NPC Vars Info]^000000";
	mes "Ha solicitado información de Variables.";
	mes "Personaje: ^0000FF" + @Nombre$ + "^000000";
	mes "¿Que variable deseas consultar (solamente numéricos)?";
	next;
	input @Variable$;

L_Verificar:
	set $@GMid, playerattached(); // El ID del GM para regresar al proceso luego de la consulta
	set $@Variable$, @Variable$;
	if (attachrid(@RID) > 0) {
		set $@Valor, getd($@Variable$); // Obtiene el Valor
		if (attachrid($@GMid)) {
			set @Resultado, $@Valor;
			mes "^0000FF[NPC Vars Info]^000000";
			mes "El valor de " + @Variable$ + " es de " + @Resultado + ".";
			mes "Que deseas hacer con esto?";
			next;
			menu "Consultar otra variable",L_Consulta,"Cambiar el valor actual",L_Cambiar,"Finalizar consultas",-;
			mes "^0000FF[NPC Vars Info]^000000";
			mes "Utiliza la herramienta cuando lo necesites";			
			close;
		} else end; // El GM se desconectó
	} else {
		// Se desconectó
		if (attachrid($@GMid)) {
			mes "^0000FF[NPC Vars Info]^000000";
			mes "Lo lamento, el jugador se ha desconectado.";
			mes "Si quieres consultar a alguien más vuelve a whispearme";
			close;
		} else end; // El GM se desconectó
	}
	end;

L_Cambiar:
	mes "^0000FF[NPC Vars Info]^000000";
	mes "Que valor deseas ponerle a la variable ^0000FF" + @Variable$ + "^000000 para el jugador ^0000FF" + @Nombre$ + "^000000";
	mes "(Valor Actual: ^0000FF" + @Resultado + "^000000)";
	next;
	input @Valor; // Solo numerico permite
	set $@GMid, playerattached(); // El ID del GM para regresar al proceso luego de la consulta
	set $@Variable$, @Variable$;
	set $@OldValor, @Resultado;
	set $@Valor, @Valor;
	if (attachrid(@RID) > 0) {
		setd $@Variable$, $@Valor; // Actualiza el Valor
		logmes "Variable " + $@Variable$ + " de " + strcharinfo(0) + " cambio de " + $@OldValor + " a " + $@Valor + " por " + $@GMid + ".";
		if (attachrid($@GMid)) {
			mes "^0000FF[NPC Vars Info]^000000";
			mes "El Valor ha sido cambiado a " + @Valor + ".";
			mes "Que deseas hacer ahora?";
			next;
			menu "Verificar el cambio",L_Verificar,"Volver a cambiar",L_Cambiar,"Consultar otra Variable",L_Consulta,"Finalizar consultas",-;
			mes "^0000FF[NPC Vars Info]^000000";
			mes "Utiliza la herramienta cuando lo necesites";			
			close;
		} else end; // El GM se desconectó
	} else {
		// Se desconectó
		if (attachrid($@GMid)) {
			mes "^0000FF[NPC Vars Info]^000000";
			mes "Lo lamento, el jugador se ha desconectado.";
			mes "Si quieres consultar a alguien más vuelve a whispearme";
			close;
		} else end; // El GM se desconectó
	}
}

// *****************************************************
//                 Flag Editor
// *****************************************************

-	script	FlagEditor	-1,{
	end;

OnWhisperGlobal:
	if( getgmlevel() < 10 )
		end;

	set .@Menu$, "";
	for( set .@i, 1; .@i <= 60; set .@i, .@i + 1 )
	{
		if( getvariableofnpc(.Guild_ID,"GFlag" + .@i) > 0 )
			set .@Menu$, .@Menu$ + getguildname(getvariableofnpc(.Guild_ID,"GFlag" + .@i));
		
		set .@Menu$, .@Menu$ + ":";
	}
	
	mes "[Editor de Flags]";
	mes "Selecciona la Bandera de Guild a Editar.";
	next;
	set .@Flag$, "GFlag" + select(.@Menu$);

	set .@Menu$, "";
	for( set .@i, 0; getvariableofnpc(.Char_ID[.@i],.@Flag$) != 0 && .@i < 127; set .@i, .@i + 1 )
	{
		set .@j, getvariableofnpc(.Char_Job[.@i],.@Flag$);
		set .@Menu$, .@Menu$ + getvariableofnpc(.Char_Name$[.@i],.@Flag$) + " [" + jobname($@Classes[.@j]) + "]:";
	}
	
	mes "[Editor de Flags]";
	mes "Selecciona el personaje a remover.";
	next;
	set .@Index, select(.@Menu$) - 1;
	set .@Job, getvariableofnpc(.Char_Job[.@Index],.@Flag$);
	
	// Guild Data Slot
	set getvariableofnpc(.Members,.@Flag$), getvariableofnpc(.Members,.@Flag$) + 1;
	set getvariableofnpc(.Converted,.@Flag$), getvariableofnpc(.Converted,.@Flag$) - 1;
	set getvariableofnpc(.Jobs[.@Job],.@Flag$), getvariableofnpc(.Jobs[.@Job],.@Flag$) + 1;
	
	// Guild Members List
	for( set .@i, .@Index; getvariableofnpc(.Char_ID[.@i],.@Flag$) != 0; set .@i, .@i + 1 )
	{
		set getvariableofnpc(.Char_ID[.@i],.@Flag$), getvariableofnpc(.Char_ID[.@i + 1],.@Flag$);
		set getvariableofnpc(.Char_Name$[.@i],.@Flag$), getvariableofnpc(.Char_Name$[.@i + 1],.@Flag$);
		set getvariableofnpc(.Char_Job[.@i],.@Flag$), getvariableofnpc(.Char_Job[.@i + 1],.@Flag$);
	}
	
	mes "[Editor de Flags]";
	mes "El miembro ha sido eliminado.";
	close;
}

// *****************************************************
//                 Item Security System
// *****************************************************

-	script	SecuritySystem	-1,{
	end;

OnSettings:
	while( 1 )
	{
		mes "[^FFA500Security System^000000]";
		mes "Current Status";

		mes "- Security Code:";
		if( #SECURITYCODE )
		{
			mes "^FFFFFF__________^2E8B57Enable^000000.";

			mes "- Item Transfers:";
			if( getsecurity() )
			{
				mes "^FFFFFF__________^2E8B57Denied^000000.";
				set .@Menu2$, "Allow transfers";
			}
			else
			{
				mes "^FFFFFF__________^FF0000Allowed^000000.";
				set .@Menu2$, "Deny transfers";
			}

			next;
			set .@Option, select("Change Code",.@Menu2$,"Remove Code","Exit");
		}
		else
		{
			mes "^FFFFFF__________^FF0000Disable^000000.";
			next;
			set .@Option, select("Set Code","Exit") + 4;
		}
		
		switch( .@Option )
		{
			case 1: // Cambiar Clave
				mes "[^FFA500Security System^000000]";
				mes "Security code is a number between 1000 and 9999.";
				mes "Please enter your current Code...";
				next;

				input .@Pass;
				if( .@Pass != #SECURITYCODE )
				{
					mes "[^FFA500Security System^000000]";
					mes "Invalid Code!!.";
					close;
				}
			
			case 5:
				mes "[^FFA500Security System^000000]";
				mes "Enter your new Code. (Number between 1000 and 9999).";
				next;
				
				input .@Pass;
				if( .@Pass < 1000 || .@Pass > 9999 )
				{
					mes "[^FFA500Security System^000000]";
					mes "Invalid code value!!.";
					close;
				}
				
				mes "[^FFA500Security System^000000]";
				mes "Repeat your new Code to confirm.";
				next;

				input .@CPass;
				if( .@CPass != .@Pass )
				{
					mes "[^FFA500Security System^000000]";
					mes "Error. Codes are different.";
					close;
				}
				
				set #SECURITYCODE, .@Pass;
				break;
			case 2: // Permitir Salidas - Bloquear Salidas
				if( getsecurity() )
				{
					mes "[^FFA500Security System^000000]";
					mes "Enter your Code to allow item transfers.";
					next;
					
					input .@Pass;
					if( #SECURITYCODE != .@Pass )
					{
						mes "[^FFA500Security System^000000]";
						mes "Invalid Code!!.";
						close;
					}
					
					setsecurity 0;
				}
				else if( #SECURITYCODE > 0 )
					setsecurity 1;
				else
					setsecurity 0;
				break;
			case 3: // Quitar Clave
				mes "[^FFA500Security System^000000]";
				mes "Please, enter your current Code to continue...";
				next;
				
				input .@Pass;
				if( #SECURITYCODE != .@Pass )
				{
					mes "[^FFA500Security System^000000]";
					mes "Invalid Code!!.";
					close;
				}
				
				set #SECURITYCODE, 0;
				setsecurity 0;
				break;
			case 4:
			case 6:
				mes "[^FFA500Security System^000000]";
				mes "You can return here by using the command @security.";
				close;
		}
	}
	
	end;
}
